//postTweet -> TC: O(1) SC: O(1)
//getNewsFeed -> TC: O(klog n) SC: O(n) : n = no. of tweets
//follow -> TC: O(1) SC: O(1)
//unfollow -> TC: O(1) SC: O(1)

class Twitter {
    private int timestamp;
    private Map<Integer, List<Tweet>> tweets; // userId -> list of tweets
    private Map<Integer, Set<Integer>> following;

    public Twitter() {
        this.timestamp = 0;
        this.tweets = new HashMap<>();
        this.following = new HashMap<>();
    }
    
    public void postTweet(int userId, int tweetId) {
        tweets.putIfAbsent(userId, new ArrayList<>());
        tweets.get(userId).add(new Tweet(tweetId, timestamp++));
    }
    
    public List<Integer> getNewsFeed(int userId) {
        PriorityQueue<Tweet> pq = new PriorityQueue<>((a, b) -> a.timestamp - b.timestamp);
        following.putIfAbsent(userId, new HashSet<>());
        following.get(userId).add(userId);

        for (int followeeId : following.get(userId)) {
            if (tweets.containsKey(followeeId)) {
                for (Tweet tweet : tweets.get(followeeId)) {
                    pq.offer(tweet);
                    if (pq.size() > 10) {
                        pq.poll();
                    }
                }
            }
        }

        List<Integer> result = new ArrayList<>();
        while (!pq.isEmpty()) {
            result.add(0, pq.poll().id);
        }

        return result;
    }
    
    public void follow(int followerId, int followeeId) {
        following.putIfAbsent(followerId, new HashSet<>());
        following.get(followerId).add(followeeId);
    }
    
    public void unfollow(int followerId, int followeeId) {
        if (following.containsKey(followerId)) {
            following.get(followerId).remove(followeeId);
        }
    }

    private static class Tweet {
        int id;
        int timestamp;

        public Tweet(int id, int timestamp) {
            this.id = id;
            this.timestamp = timestamp;
        }
    }
}

/**
 * Your Twitter object will be instantiated and called as such:
 * Twitter obj = new Twitter();
 * obj.postTweet(userId,tweetId);
 * List<Integer> param_2 = obj.getNewsFeed(userId);
 * obj.follow(followerId,followeeId);
 * obj.unfollow(followerId,followeeId);
 */
